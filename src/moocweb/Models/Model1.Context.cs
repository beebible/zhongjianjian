//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace moocweb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<@class> @class { get; set; }
        public virtual DbSet<college_info> college_info { get; set; }
        public virtual DbSet<qbase_chapter> qbase_chapter { get; set; }
        public virtual DbSet<qbase_set> qbase_set { get; set; }
        public virtual DbSet<question> question { get; set; }
        public virtual DbSet<stu_class> stu_class { get; set; }
        public virtual DbSet<stu_info> stu_info { get; set; }
        public virtual DbSet<teacher_class> teacher_class { get; set; }
        public virtual DbSet<teacher_info> teacher_info { get; set; }
        public virtual DbSet<user_account> user_account { get; set; }
        public virtual DbSet<NOTICE> NOTICE { get; set; }
        public virtual DbSet<notice_stu_class> notice_stu_class { get; set; }
        public virtual DbSet<teainfo> teainfo { get; set; }
        public virtual DbSet<classinfo> classinfo { get; set; }
        public virtual DbSet<StuClass> StuClass { get; set; }
        public virtual DbSet<background> background { get; set; }
        public virtual DbSet<qbasechapter> qbasechapter { get; set; }
        public virtual DbSet<qbaseset> qbaseset { get; set; }
        public virtual DbSet<ques> ques { get; set; }
        public virtual DbSet<ques_judge> ques_judge { get; set; }
        public virtual DbSet<teapaper> teapaper { get; set; }
        public virtual DbSet<paper> paper { get; set; }
        public virtual DbSet<paperquestion> paperquestion { get; set; }
        public virtual DbSet<paper_ques> paper_ques { get; set; }
        public virtual DbSet<exam> exam { get; set; }
        public virtual DbSet<exam_class> exam_class { get; set; }
        public virtual DbSet<exam_paper> exam_paper { get; set; }
        public virtual DbSet<examclass> examclass { get; set; }
        public virtual DbSet<practiceclass> practiceclass { get; set; }
        public virtual DbSet<stuinfo> stuinfo { get; set; }
        public virtual DbSet<stuexam> stuexam { get; set; }
        public virtual DbSet<stupaperques> stupaperques { get; set; }
        public virtual DbSet<stupaperques_prac> stupaperques_prac { get; set; }
        public virtual DbSet<stu_ans_count> stu_ans_count { get; set; }
        public virtual DbSet<paper_ques_count> paper_ques_count { get; set; }
        public virtual DbSet<stupaperques_exam> stupaperques_exam { get; set; }
        public virtual DbSet<feedback> feedback { get; set; }
        public virtual DbSet<quesanswer> quesanswer { get; set; }
        public virtual DbSet<stu_ans_log> stu_ans_log { get; set; }
        public virtual DbSet<stu_paperques> stu_paperques { get; set; }
        public virtual DbSet<examfeedback> examfeedback { get; set; }
        public virtual DbSet<stu_ans_score> stu_ans_score { get; set; }
        public virtual DbSet<exampaper> exampaper { get; set; }
        public virtual DbSet<timeless> timeless { get; set; }
        public virtual DbSet<stu_exam_right_answer> stu_exam_right_answer { get; set; }
        public virtual DbSet<userapply> userapply { get; set; }
    
        [DbFunction("Entities", "Fun_String2ToStringArray")]
        public virtual IQueryable<Fun_String2ToStringArray_Result> Fun_String2ToStringArray(string str, string split)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var splitParameter = split != null ?
                new ObjectParameter("split", split) :
                new ObjectParameter("split", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fun_String2ToStringArray_Result>("[Entities].[Fun_String2ToStringArray](@str, @split)", strParameter, splitParameter);
        }
    
        public virtual int MassInsertStu(string stunums, Nullable<long> class_id, Nullable<long> college_id)
        {
            var stunumsParameter = stunums != null ?
                new ObjectParameter("stunums", stunums) :
                new ObjectParameter("stunums", typeof(string));
    
            var class_idParameter = class_id.HasValue ?
                new ObjectParameter("class_id", class_id) :
                new ObjectParameter("class_id", typeof(long));
    
            var college_idParameter = college_id.HasValue ?
                new ObjectParameter("college_id", college_id) :
                new ObjectParameter("college_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MassInsertStu", stunumsParameter, class_idParameter, college_idParameter);
        }
    
        public virtual int MakeNotice(Nullable<int> tea_id, string content, Nullable<int> class_id)
        {
            var tea_idParameter = tea_id.HasValue ?
                new ObjectParameter("tea_id", tea_id) :
                new ObjectParameter("tea_id", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var class_idParameter = class_id.HasValue ?
                new ObjectParameter("class_id", class_id) :
                new ObjectParameter("class_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakeNotice", tea_idParameter, contentParameter, class_idParameter);
        }
    }
}
